#!/usr/bin/env node
import { YouTubeTranscript } from './dist/transcript.js';
import { YouTubeParser } from './dist/parser.js';

async function testShorts() {
  const url = 'https://www.youtube.com/shorts/govm5l5KA8Q';
  
  console.log('Testing YouTube Shorts transcript retrieval...');
  console.log('URL:', url);
  console.log('');
  
  // Extract video ID
  const videoId = YouTubeParser.extractVideoId(url);
  console.log('Extracted Video ID:', videoId);
  console.log('');
  
  if (!videoId) {
    console.error('Failed to extract video ID from URL');
    return;
  }
  
  // Try to retrieve transcript
  try {
    console.log('Attempting to retrieve English transcript...');
    const result = await YouTubeTranscript.retrieve(videoId, {
      lang: 'en',
      format: 'json',
      includeTimestamps: true
    });
    
    if (result.success) {
      console.log('✅ Success! Transcript retrieved');
      console.log('');
      console.log('Video Title:', result.title);
      console.log('Language:', result.language);
      console.log('Duration:', result.duration, 'seconds');
      console.log('');
      
      if (Array.isArray(result.transcript)) {
        console.log(`Transcript has ${result.transcript.length} segments:`);
        console.log('');
        
        // Show first 5 segments
        const preview = result.transcript.slice(0, 5);
        preview.forEach((segment, i) => {
          console.log(`[${i + 1}] ${segment.start.toFixed(2)}s - ${segment.end.toFixed(2)}s`);
          console.log(`    "${segment.text}"`);
        });
        
        if (result.transcript.length > 5) {
          console.log(`    ... and ${result.transcript.length - 5} more segments`);
        }
      } else {
        console.log('Transcript (text format):');
        console.log(result.transcript);
      }
    } else {
      console.log('❌ Failed to retrieve transcript');
      console.log('Error:', result.error);
    }
  } catch (error) {
    console.error('❌ Error retrieving transcript:', error.message);
    console.error(error.stack);
  }
  
  console.log('');
  console.log('Testing list available transcripts...');
  
  try {
    const languages = await YouTubeTranscript.listAvailable(videoId);
    
    if (languages.success) {
      console.log('✅ Available transcript languages:');
      languages.languages.forEach(lang => {
        const label = lang.isAutoGenerated ? ' (auto-generated)' : '';
        const isTranslatable = lang.isTranslatable ? ' [translatable]' : '';
        console.log(`  - ${lang.code}: ${lang.name}${label}${isTranslatable}`);
      });
    } else {
      console.log('❌ Failed to list available transcripts');
      console.log('Error:', languages.error);
    }
  } catch (error) {
    console.error('❌ Error listing transcripts:', error.message);
  }
}

testShorts().catch(console.error);